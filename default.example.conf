# General Options
#	Whatever is defined here will be avaliable for all
# 	actions
#
#[General]
#Sets global email to send the action result
#	Email=josh@gmail.com
#Forces the user to run actions
#	User=marcos
#Uses superuser on all actions
#	Super=N
[General]
Super=N

# Section Explanation
#Put here the action name
#[action_name]
#description of action
# 	Description=
#type of the action
# 	Type=Local
#From wich place the backup must come from
#	From=/home/josh/Pictures
#To where the files go
#	To=/tmp/Pictures
#Excludes rules, separeted by , (*.jpg,*.xls).
#	Excludes=
#Includes rules, separeted by , (*.jpg,*.xls).
#	Includes=
#Inlcude from file (replaces ~ w home and ./ with From)
#	IncludeFrom=
#Excludes from file (replaces ~ w home and ./ with From)
#	ExcludeFrom=
#Uses superuser to run this action or not (y,n)
#	Super=N
#Forces action to run with this user
#	User=
#Put this modifies to action program
#	Options=
#For remote action, rclone action (sync, copy, etc)
#	Action=sync
#When set, Autofilter tries to find files in From/
#using format: .excludes.conf | .includes.conf
#			   .filter.conf
#	AutoFilter=n
#When AutoFilter is set, add this prefix in search
#By ex, [remote] prefix, AutoFilter tries to find:
#.remote.excludes.conf | .remote.includes.conf
#			   .remote.filter.conf
#	AutoFilterPrefix=remote
#Define the email to send this action
#	Email=
#List of actions that this action depens
#Be careful to not add circular dependencies and this
#will not run. Separeted by commas, ex:
#	Depends=pictures,home
#
# Run before/after a action is performed. You can create a script
# and check if network folder is mounted, or check number of files
# size of dir, etc..
# backupFire passes to script enviroment variables as From, To, etc..
# besides, you can use all action options with %% as %To%, etc..
# Backup has several internal programs useful:
# 		checkSize [folder] [operator] [size]
#		Check the size of folder using operators: >, >=, <, <=, !=
#		Example: Before=checkSize "%From%" > 10mb
#
# 		countFiles [folder] [operator] [size]
#		Check count the files of folder using operators: >, >=, <, <=, !=
#		Example: Before=countFiles "%From%" > 23.000
#
# Is important to know that if Before is set, the action will only run if
# the before script is sucessfull (returns 0). if not, stops the action!
# All dependencies actions will not be executed!
# If after is set, then the action will be executed, but all dependent actions
# will not be called.
# 	Before=checkSize %From% > 10mb
# 	After=checkSize %To% > 8mb
# Or any apllication or script:
#	Before=~/bin/doSomething.sh --dir=%From% --countWordFiles=33
#
[pictures]
Type=Local
From=/home/josh/Pictures/
To=/tmp/josh
Before=checkSize "%From%" > 10mb
After=countFiles "%To%" > 1.000
#Excludes=
#Includes=
#IncludeFrom=
#ExcludeFrom=
#Super=N
#User=
#Options=
#Action=sync
#AutoFilter=n
#AutoFilterPrefix=.remote
#Email=

[remote]
Type=Remote
Action=sync
From=/tmp/josh/
To=dp:/josh
#Excludes=
Includes=*.jpg,*.png,meu nome.dot
#IncludeFrom=/tmp/include.from.conf
#ExcludeFrom=
#Super=Y
#User=josh
Options=
#AutoFilter=
#Email=
Depends=pictures